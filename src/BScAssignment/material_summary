#!/usr/bin/env python

import sys

import os.path

import json

UNIT_CELL_DIRECTORY = "unit_cells"

INDENT = " "*2


def print_help():
    print(f"USAGE {sys.argv[0]} [Material]")


def main():
    material = sys.argv[1]

    material_path = os.path.join(os.path.curdir, UNIT_CELL_DIRECTORY, f"{material}.json")

    if not os.path.exists(material_path):
        print(f"Unit cell for material {material} was not found", file=sys.stderr)
        print(f"Looked in directory: {material_path}", file=sys.stderr)
        sys.exit(1)

    with open(material_path) as f:
        data = json.load(f)

    # TODO: Make bold
    print("Lattice:")
    base = ord('u')
    for i, axis in enumerate(data['lattice']):
        print(f"{INDENT}{chr(i + base)} = {axis}")

    print()
    # TODO: Make bold
    print("Atoms:")
    for atom in data['basis']:
        print(f"{INDENT}Type: {atom['type']}")
        print(f"{INDENT}Conductance orbitals:", ', '.join(atom['conductance_orbitals']) if len(atom['conductance_orbitals']) else '-')
        print(f"{INDENT}Valence orbitals:", ', '.join(atom['valence_orbitals']) if len(atom['valence_orbitals']) else '-')
        print(f"{INDENT}Positions:")
        for position in atom['positions']:
            output = []
            for i, axis in enumerate(position):
                output.append(f"{chr(base+i)} = {axis:>4}")

            print(INDENT*2 + ', '.join(output))
        print()


if __name__ == "__main__":
    if len(sys.argv) != 2:
        print_help()
        sys.exit(1)

    main()
